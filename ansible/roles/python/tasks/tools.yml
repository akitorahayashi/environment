---
- name: "Check if pipx is installed"
  ansible.builtin.command: "command -v pipx"
  register: python_pipx_check
  ignore_errors: true
  changed_when: false
  environment:
    PATH: "{{ ansible_env.HOME }}/.pyenv/shims:{{ ansible_env.PATH }}"

- name: "Install pipx using global Python user install"
  ansible.builtin.shell: |
    eval "$(pyenv init -)"
    python -m pip install --user pipx
    python -m pipx ensurepath
  args:
    executable: /bin/bash
  environment:
    PATH: "{{ ansible_env.HOME }}/.pyenv/shims:{{ ansible_env.PATH }}"
  when: python_pipx_check.rc != 0
  changed_when: python_pipx_check.rc != 0

- name: "Install pipx tools"
  ansible.builtin.command:
    cmd: "pipx install {{ item }}"
  loop: "{{ lookup('file', role_path + '/config/common/pipx-tools.txt').splitlines() | reject('match', '^#') | reject('equalto', '') }}"
  changed_when: false
  environment:
    PATH: "{{ ansible_env.HOME }}/.pyenv/shims:{{ ansible_env.PATH }}"

- name: "Check if mlx-lm venv exists"
  ansible.builtin.stat:
    path: "{{ repo_root_path }}/mlx-lm"
  register: python_mlx_lm_venv

- name: "Fail if mlx-lm venv is missing"
  ansible.builtin.fail:
    msg: "mlx-lm venv not found at {{ repo_root_path }}/mlx-lm. Run 'make base' first."
  when: not python_mlx_lm_venv.stat.exists

- name: "Create mlx-lm directory in user's local"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.local/mlx_lm"
    state: directory
    mode: "0755"

- name: "Symlink mlx-lm bin directory to user's local bin"
  ansible.builtin.file:
    src: "{{ repo_root_path }}/mlx-lm/bin"
    dest: "{{ ansible_env.HOME }}/.local/mlx_lm/bin"
    state: link
    force: true
