---
- name: "Load pipx tools configuration"
  ansible.builtin.include_vars:
    file: "{{ role_path }}/config/common/pipx-tools.yml"
    name: pipx_tools_config

- name: "Install pipx tools"
  ansible.builtin.shell: |
    eval "$(pyenv init -)"
    pipx install --python {{ ansible_env.HOME }}/.pyenv/versions/{{ item.python_version | default(python_version) }}/bin/python {{ item.name }}
  args:
    executable: /bin/bash
  loop: "{{ pipx_tools_config.tools }}"
  changed_when: false
  when: pipx_tools_config.tools | length > 0

- name: "Create mlx-lm venv"
  ansible.builtin.shell: |
    eval "$(pyenv init -)"
    uv venv {{ repo_root_path }}/mlx-lm
  args:
    executable: /bin/bash
    creates: "{{ repo_root_path }}/mlx-lm"

- name: "Install mlx dependency-group into mlx-lm venv"
  ansible.builtin.shell: |
    eval "$(pyenv init -)"
    UV_PROJECT_ENVIRONMENT={{ repo_root_path }}/mlx-lm uv sync --only-group mlx
  args:
    executable: /bin/bash
  changed_when: false

- name: "Remove existing mlx_lm bin directory"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.local/mlx_lm/bin"
    state: absent

- name: "Create mlx-lm directory in user's local"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.local/mlx_lm"
    state: directory
    mode: "0755"

- name: "Copy mlx-lm bin directory to user's local bin"
  ansible.builtin.copy:
    src: "{{ repo_root_path }}/mlx-lm/bin/"
    dest: "{{ ansible_env.HOME }}/.local/mlx_lm/bin/"
    mode: preserve
    force: true
