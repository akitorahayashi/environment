---
- name: "Ensure Claude Code User directory exists"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.claude"
    state: directory
    mode: '0755'

- name: "Find Claude config files (flat)"
  ansible.builtin.find:
    paths: "{{ config_dir_abs_path }}/claude"
    patterns:
      - "*.json"
      - "*.md"
    file_type: file
    recurse: no
  register: claude_files_flat

- name: "Symlink Claude config files (flat)"
  ansible.builtin.file:
    src: "{{ item.path }}"
    dest: "{{ ansible_env.HOME }}/.claude/{{ item.path | basename }}"
    state: link
    force: true
  loop: "{{ claude_files_flat.files }}"
  loop_control:
    label: "{{ item.path | basename }}"

- name: "Find Claude config directories (recursive)"
  ansible.builtin.find:
    paths: "{{ config_dir_abs_path }}/claude"
    file_type: directory
    recurse: no
    patterns: "commands,templates"
  register: claude_dirs

- name: "Symlink Claude config directories (recursive)"
  ansible.builtin.file:
    src: "{{ item.path }}"
    dest: "{{ ansible_env.HOME }}/.claude/{{ item.path | basename }}"
    state: link
    force: true
  loop: "{{ claude_dirs.files }}"
  loop_control:
    label: "{{ item.path | basename }}"

- name: "Read Claude MCP configuration"
  ansible.builtin.slurp:
    src: "{{ config_dir_abs_path }}/claude/mcp-servers.json"
  register: claude_mcp_config

- name: "Parse MCP servers from configuration"
  ansible.builtin.set_fact:
    mcp_servers_config: "{{ (claude_mcp_config.content | b64decode | from_json).mcpServers }}"

- name: "Check if ~/.claude.json exists"
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.claude.json"
  register: claude_json_stat

- name: "Read existing ~/.claude.json if it exists"
  ansible.builtin.slurp:
    src: "{{ ansible_env.HOME }}/.claude.json"
  register: existing_claude_json
  when: claude_json_stat.stat.exists

- name: "Parse existing ~/.claude.json"
  ansible.builtin.set_fact:
    existing_claude_config: "{{ (existing_claude_json.content | b64decode | from_json) if claude_json_stat.stat.exists else {} }}"

- name: "Check if MCP servers need updating"
  ansible.builtin.set_fact:
    mcp_servers_need_update: "{{ existing_claude_config.mcpServers | default({}) != mcp_servers_config }}"

- name: "Merge MCP servers into existing config"
  ansible.builtin.set_fact:
    updated_claude_config: "{{ existing_claude_config | combine({'mcpServers': mcp_servers_config}) }}"
  when: mcp_servers_need_update

- name: "Create or update ~/.claude.json"
  ansible.builtin.copy:
    content: "{{ updated_claude_config | to_nice_json }}"
    dest: "{{ ansible_env.HOME }}/.claude.json"
    mode: '0644'
  when: mcp_servers_need_update