---
version: "1"
git_protocol: ssh
prompt: disabled
spinner: enabled
aliases:
  # gh repo aliases
  re-ls: |
    !gh repo list \
      --limit 18 \
      --json name,url,pushedAt \
      --jq 'sort_by(.pushedAt) | reverse | .[] | "【\(.name)】: \(.url)"'
  re-cl: repo clone
  or: org
  or-ls: org list
  or-re-ls: |
    !gh api "orgs/$1/repos?per_page=18" \
      --jq 'sort_by(.pushed_at) | reverse | .[] | "【\(.name)】: \(.html_url)"'
  # gh branch aliases
  br-df: |
    !f() {
      local base_branch="${1:-main}"
      local target_branch="${2:-HEAD}"
      echo "=== DIFF CONTEXT ==="
      echo "Base: $base_branch"
      echo "Target: $target_branch"
      echo "Repository: $(basename $(git rev-parse --show-toplevel))"
      echo "=== CHANGES ==="
      git diff "$base_branch...$target_branch"
    }; f "$@"
  pr-ls: '!gh_pr_ls.py "$@"'
  pr-ct: |
    !f() {
      local pr_id="$1"
      if [ -z "$pr_id" ]; then
        echo "Usage: gh pr-ds <pr-number>" >&2
        return 1
      fi
      gh pr view "$pr_id" --json comments --jq '.comments[] | "[\(.author.login)] \(.body)"'
    }; f "$@"
  pr-mr: |
    !f() {
      local pr_id="$1"
      if [ -z "$pr_id" ]; then
        echo "Usage: gh pr-mr <pr-number>" >&2
        return 1
      fi
      local mergeable
      mergeable=$(gh pr view "$pr_id" --json mergeable --jq ".mergeable")
      if [ "$mergeable" = "MERGEABLE" ]; then
        echo "PR #$pr_id is MERGEABLE. Merging..."
        gh pr merge "$pr_id"
      else
        echo "PR #$pr_id is not mergeable: $mergeable"
        return 2
      fi
    }; f "$@"
