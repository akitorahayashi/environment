---
- name: "Ensure Gemini configuration directory exists"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.gemini"
    state: directory
    mode: '0755'

- name: "Find Gemini config files (flat)"
  ansible.builtin.find:
    paths: "{{ config_dir_abs_path }}/aiding/gemini"
    patterns:
      - "*.json"
      - "*.md"
    file_type: file
    recurse: no
  register: gemini_files_flat

- name: "Symlink Gemini config files (flat)"
  ansible.builtin.file:
    src: "{{ item.path }}"
    dest: "{{ ansible_env.HOME }}/.gemini/{{ item.path | basename }}"
    state: link
    force: true
  loop: "{{ gemini_files_flat.files }}"
  loop_control:
    label: "{{ item.path | basename }}"

- name: "Check if Gemini CLI is available"
  ansible.builtin.command: which gemini
  register: gemini_cli_check
  failed_when: false
  changed_when: false

- name: "Read Gemini settings configuration"
  ansible.builtin.slurp:
    src: "{{ config_dir_abs_path }}/aiding/gemini/settings.json"
  register: gemini_settings_config
  when: gemini_cli_check.rc == 0

- name: "Warning if Gemini CLI not available"
  ansible.builtin.debug:
    msg: "Gemini CLI not found. Configuration files symlinked but MCP servers not installed via CLI."
  when: gemini_cli_check.rc != 0

- name: "Create Gemini commands directory"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.gemini/commands"
    state: directory
    mode: '0755'

- name: "Symlink Gemini AGENTS file"
  ansible.builtin.file:
    src: "{{ config_dir_abs_path }}/aiding/gemini/GEMINI.md"
    dest: "{{ ansible_env.HOME }}/.gemini/GEMINI.md"
    state: link
    force: true
