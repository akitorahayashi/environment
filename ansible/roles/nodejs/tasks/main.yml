---
- name: "Set Node.js version variable from file"
  ansible.builtin.slurp:
    src: "{{ config_dir_abs_path }}/nodejs/.nvmrc"
  register: node_version_file

- name: "Set Node.js version fact"
  ansible.builtin.set_fact:
    node_version: "{{ node_version_file.content | b64decode | trim }}"

- name: "Install nvm, jq, and pnpm"
  community.general.homebrew:
    name: "{{ item }}"
    state: present
  loop:
    - nvm
    - jq
    - pnpm

- name: "Install specified Node.js version with nvm"
  ansible.builtin.shell:
    cmd: "source $(brew --prefix nvm)/nvm.sh && nvm install {{ node_version }} --skip-existing"
  args:
    creates: "{{ ansible_env.HOME }}/.nvm/versions/node/v{{ node_version }}"
  changed_when: false
  environment:
    NVM_DIR: "{{ ansible_env.HOME }}/.nvm"

- name: "Set default Node.js version"
  ansible.builtin.shell:
    cmd: "source $(brew --prefix nvm)/nvm.sh && nvm alias default {{ node_version }}"
  changed_when: false
  environment:
    NVM_DIR: "{{ ansible_env.HOME }}/.nvm"

- name: "Install global Node.js packages"
  ansible.builtin.shell:
    cmd: "source $(brew --prefix nvm)/nvm.sh && nvm use {{ node_version }} && pnpm install -g {{ item }}@latest"
  loop: "{{ lookup('file', config_dir_abs_path + '/nodejs/global-packages.json') | from_json | json_query('dependencies') | dict2items | map(attribute='key') | list }}"
  changed_when: false
  environment:
    NVM_DIR: "{{ ansible_env.HOME }}/.nvm"
    PNPM_HOME: "{{ ansible_env.HOME }}/Library/pnpm"
    PATH: "{{ ansible_env.HOME }}/Library/pnpm:{{ ansible_env.PATH }}"

- name: "Create symlink for md-to-pdf config"
  ansible.builtin.file:
    src: "{{ config_dir_abs_path }}/nodejs/md-to-pdf-config.js"
    dest: "{{ ansible_env.HOME }}/.md-to-pdf-config.js"
    state: link
    force: true