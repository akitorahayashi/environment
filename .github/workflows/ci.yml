name: macOS環境構築のCI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 手動実行も可能にする

jobs:
  test-install:
    runs-on: macos-latest
    
    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v3
      
      - name: インストールスクリプトの実行権限付与
        run: chmod +x install.sh
      
      - name: インストールスクリプトの実行
        run: ./install.sh
        env:
          CI: true  # CI環境であることを示す
        
      - name: Homebrewのインストールの確認
        run: brew --version
        
      - name: Xcodeコマンドラインツールの確認
        run: xcode-select -p
        
      - name: シェル設定の確認
        run: |
          test -f ~/.zshrc && echo "zshrcが存在します ✅" || (echo "zshrcが存在しません ❌" && exit 1)
          test -f ~/.zprofile && echo "zprofileが存在します ✅" || (echo "zprofileが存在しません ❌" && exit 1)
          
          # シンボリックリンクの検証
          if [ "$(readlink ~/.zshrc)" = "$HOME/environment/shell/.zshrc" ]; then
            echo "zshrcのシンボリックリンクが正しく設定されています ✅"
          else
            echo "zshrcのシンボリックリンクが正しくありません ❌"
            exit 1
          fi
          
          if [ "$(readlink ~/.zprofile)" = "$HOME/environment/shell/.zprofile" ]; then
            echo "zprofileのシンボリックリンクが正しく設定されています ✅"
          else
            echo "zprofileのシンボリックリンクが正しくありません ❌"
            exit 1
          fi
          
          # Homebrewパスの設定確認
          if grep -q '/opt/homebrew/bin/brew shellenv' ~/.zprofile; then
            echo "zprofileにHomebrewパスが正しく設定されています ✅"
          else
            echo "zprofileにHomebrewパスが設定されていません ❌"
            exit 1
          fi
          
          echo "シェル設定の確認が完了しました ✅"
      
      - name: Git設定の確認
        run: |
          test -f ~/.gitconfig && echo "gitconfigが存在します ✅" || (echo "gitconfigが存在しません ❌" && exit 1)
          test -f ~/.gitignore_global && echo "gitignore_globalが存在します ✅" || (echo "gitignore_globalが存在しません ❌" && exit 1)
          
          # シンボリックリンクの検証
          if [ "$(readlink ~/.gitconfig)" = "$HOME/environment/git/.gitconfig" ]; then
            echo "gitconfigのシンボリックリンクが正しく設定されています ✅"
          else
            echo "gitconfigのシンボリックリンクが正しくありません ❌"
            exit 1
          fi
          
          if [ "$(readlink ~/.gitignore_global)" = "$HOME/environment/git/.gitignore_global" ]; then
            echo "gitignore_globalのシンボリックリンクが正しく設定されています ✅"
          else
            echo "gitignore_globalのシンボリックリンクが正しくありません ❌"
            exit 1
          fi
          
          # excludesfileの設定確認
          if [ "$(git config --global core.excludesfile)" = "$HOME/.gitignore_global" ]; then
            echo "Gitのexcludesfileが正しく設定されています ✅"
          else
            echo "Gitのexcludesfileが正しく設定されていません ❌"
            exit 1
          fi
          
          echo "Git設定の確認が完了しました ✅"
      
      - name: Homebrewパッケージの確認
        run: |
          # Brewfileから必要なパッケージをチェック
          if [ -f "$HOME/environment/config/Brewfile" ]; then
            echo "Brewfileから必要なパッケージを確認中..."
            # 重要なパッケージのみチェック
            brew list git && echo "gitがインストールされています ✅" || (echo "gitがインストールされていません ❌" && exit 1)
            brew list jq && echo "jqがインストールされています ✅" || (echo "jqがインストールされていません ❌" && exit 1)
            
            # Brewfileに記載されている他の重要なパッケージも確認
            # 例: xcodes, flutter など（存在する場合）
            if grep -q "xcodes" "$HOME/environment/config/Brewfile"; then
              brew list xcodes && echo "xcodesがインストールされています ✅" || echo "xcodesがインストールされていません（オプション） ⚠️"
            fi
            
            if grep -q "flutter" "$HOME/environment/config/Brewfile"; then
              brew list flutter && echo "flutterがインストールされています ✅" || echo "flutterがインストールされていません（オプション） ⚠️"
            fi
          else
            echo "Brewfileが見つかりません。パッケージの確認をスキップします"
          fi
          echo "Homebrewパッケージの確認が完了しました ✅"
      
      - name: Flutter設定の確認（インストールされている場合）
        run: |
          if command -v flutter &>/dev/null; then
            echo "Flutterがインストールされています。基本設定を確認中..."
            # 環境変数の設定確認
            if [ -n "$ANDROID_HOME" ] || [ -n "$ANDROID_SDK_ROOT" ]; then
              echo "Android SDKの環境変数が設定されています ✅"
            else
              echo "Android SDKの環境変数が設定されていません（CI環境では想定内） ⚠️"
            fi
            
            # Flutter doctorの基本チェック（エラーがあっても失敗しないように）
            flutter --version || echo "Flutterのバージョン確認に失敗しました（CI環境では想定内） ⚠️"
          else
            echo "Flutterがインストールされていません。確認をスキップします"
          fi
      
      - name: Cursor設定の確認（インストールされている場合）
        run: |
          if [ -d "/Applications/Cursor.app" ] || [ -d "$HOME/Applications/Cursor.app" ]; then
            echo "Cursorがインストールされています ✅"
            
            # 設定ファイルの存在確認
            if [ -f "$HOME/environment/cursor/settings.json" ]; then
              echo "Cursorの設定ファイルが存在します ✅"
              
              # Flutter SDKパスの設定確認（Flutterがインストールされている場合）
              if command -v flutter &>/dev/null && grep -q "dart.flutterSdkPath" "$HOME/environment/cursor/settings.json"; then
                echo "Cursorの設定にFlutter SDKパスが設定されています ✅"
              fi
            else
              echo "Cursorの設定ファイルが存在しません ⚠️"
            fi
          else
            echo "Cursorがインストールされていません。確認をスキップします"
          fi
      
      - name: スクリプトの冪等性テスト
        run: |
          echo "インストールスクリプトを再度実行して冪等性をテスト中..."
          ./install.sh
          echo "冪等性テストが完了しました ✅"
        env:
          CI: true  # CI環境であることを示す 